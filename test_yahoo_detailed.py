#!/usr/bin/env python3
"""
Detailn√≠ test Yahoo Finance API - zkou≈°√≠m v≈°echna dostupn√° pole
"""

import yfinance as yf
import json
import pprint

def explore_etf_fields(ticker):
    """Prozkoum√° v≈°echna dostupn√° pole pro dan√Ω ETF"""
    print(f"\nüîç Zkoum√°n√≠ v≈°ech pol√≠ pro {ticker}")
    print("=" * 60)
    
    etf = yf.Ticker(ticker)
    
    # Hlavn√≠ info objekt
    info = etf.info
    print(f"üìã Celkem pol√≠ v info: {len(info)}")
    
    # Expense ratio alternativy
    expense_fields = [
        'expenseRatio', 'annualReportExpenseRatio', 'totalExpenseRatio', 
        'netExpenseRatio', 'grossExpenseRatio', 'managementFee'
    ]
    
    print("\nüí∞ Expense Ratio pole:")
    for field in expense_fields:
        value = info.get(field)
        if value is not None:
            print(f"   ‚úÖ {field}: {value}")
            if isinstance(value, float) and value < 1:
                print(f"      ‚Üí {value * 100:.2f}%")
        else:
            print(f"   ‚ùå {field}: None")
    
    # Holdings souvisej√≠c√≠ pole
    holdings_fields = [
        'holdings', 'top10Holdings', 'majorHolders', 'institutionalHolders',
        'equityHoldings', 'bondHoldings', 'sectorWeightings', 'bondRatings',
        'stockHoldings', 'cashHoldings'
    ]
    
    print("\nüìà Holdings pole:")
    for field in holdings_fields:
        value = info.get(field)
        if value is not None:
            print(f"   ‚úÖ {field}: {type(value)} - {str(value)[:100]}...")
        else:
            print(f"   ‚ùå {field}: None")
    
    # Zkus√≠m alternativn√≠ metody
    print("\nüîß Alternativn√≠ metody:")
    
    # Institutional holders
    try:
        institutional = etf.institutional_holders
        if institutional is not None and not institutional.empty:
            print(f"   ‚úÖ institutional_holders: {len(institutional)} ≈ô√°dk≈Ø")
            print(f"      Prvn√≠ z√°znam: {institutional.iloc[0].to_dict()}")
        else:
            print("   ‚ùå institutional_holders: pr√°zdn√©")
    except Exception as e:
        print(f"   ‚ùå institutional_holders: chyba - {e}")
    
    # Major holders
    try:
        major = etf.major_holders
        if major is not None and not major.empty:
            print(f"   ‚úÖ major_holders: {len(major)} ≈ô√°dk≈Ø")
            print(f"      Data: {major.to_dict()}")
        else:
            print("   ‚ùå major_holders: pr√°zdn√©")
    except Exception as e:
        print(f"   ‚ùå major_holders: chyba - {e}")
    
    # Quarterly financials
    try:
        financials = etf.quarterly_financials
        if financials is not None and not financials.empty:
            print(f"   ‚úÖ quarterly_financials: {financials.shape}")
        else:
            print("   ‚ùå quarterly_financials: pr√°zdn√©")
    except Exception as e:
        print(f"   ‚ùå quarterly_financials: chyba - {e}")
    
    # V≈°echna pole s 'expense' nebo 'fee' nebo 'ratio'
    print(f"\nüîé Pole obsahuj√≠c√≠ 'expense', 'fee', 'ratio':")
    relevant_fields = [k for k in info.keys() if any(word in k.lower() for word in ['expense', 'fee', 'ratio', 'cost'])]
    for field in relevant_fields:
        value = info.get(field)
        print(f"   {field}: {value}")
    
    # V≈°echna pole s 'hold'
    print(f"\nüîé Pole obsahuj√≠c√≠ 'hold':")
    hold_fields = [k for k in info.keys() if 'hold' in k.lower()]
    for field in hold_fields:
        value = info.get(field)
        print(f"   {field}: {value}")
    
    return info

def main():
    # Test nƒõkolika r≈Øzn√Ωch ETF typ≈Ø
    test_etfs = ["SPY", "VTI", "QQQ"]  # R≈Øzn√© typy ETF
    
    all_fields = set()
    
    for ticker in test_etfs:
        info = explore_etf_fields(ticker)
        all_fields.update(info.keys())
        
        # Mal√° pauza mezi requesty
        import time
        time.sleep(1)
    
    print(f"\nüìä SOUHRN:")
    print(f"Celkem unik√°tn√≠ch pol√≠ nap≈ô√≠ƒç v≈°emi ETF: {len(all_fields)}")
    
    # Ulo≈æ√≠m v≈°echna pole do souboru
    with open("/Users/tomaskostrhoun/Documents/ETF/yahoo_all_fields.txt", "w") as f:
        for field in sorted(all_fields):
            f.write(f"{field}\n")
    
    print("üíæ Seznam v≈°ech pol√≠ ulo≈æen do yahoo_all_fields.txt")

if __name__ == "__main__":
    main()
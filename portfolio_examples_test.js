// Manu√°ln√≠ test portfolio logiky (bez import≈Ø)

// Mock portfolio models
const portfolioModels = {
  lifecycle_20s: {
    name: "Portfolio pro 20-30 let",
    allocation: { stocks: 90, bonds: 5, commodities: 3, reits: 2 },
    expectedReturn: "9-11% roƒçnƒõ",
    riskLevel: 8
  },
  lifecycle_40s: {
    name: "Portfolio pro 40-50 let", 
    allocation: { stocks: 70, bonds: 20, commodities: 5, reits: 5 },
    expectedReturn: "7-9% roƒçnƒõ",
    riskLevel: 6
  },
  lifecycle_50s: {
    name: "Portfolio pro 50+ let",
    allocation: { stocks: 50, bonds: 40, commodities: 5, reits: 5 },
    expectedReturn: "5-7% roƒçnƒõ",
    riskLevel: 4
  }
};

// Core ETF building blocks
const coreETFs = {
  stocks: {
    world: { isin: 'IE00B4L5Y983', name: 'Vanguard FTSE All-World UCITS ETF', ter: 0.22 },
    sp500: { isin: 'IE00B5BMR087', name: 'iShares Core S&P 500 UCITS ETF', ter: 0.07 },
    europe: { isin: 'IE00B4K48X80', name: 'iShares Core MSCI Europe UCITS ETF', ter: 0.12 }
  },
  bonds: {
    government: { isin: 'IE00B4WXJJ64', name: 'iShares Core Global Aggregate Bond UCITS ETF', ter: 0.10 },
    corporate: { isin: 'IE00BF1FWR40', name: 'iShares Core Global Corporate Bond UCITS ETF', ter: 0.10 }
  },
  commodities: {
    gold: { isin: 'IE00B4ND3602', name: 'iShares Physical Gold ETC', ter: 0.12 }
  },
  reits: {
    global: { isin: 'IE00B1FZS467', name: 'iShares Global Property Securities Equity Index Fund', ter: 0.24 }
  }
};

function generatePortfolio(profile) {
  let portfolioType;
  
  // Determine portfolio type
  if (profile.age <= 30) {
    portfolioType = profile.riskTolerance === 'conservative' ? 'lifecycle_40s' : 'lifecycle_20s';
  } else if (profile.age <= 50) {
    portfolioType = profile.riskTolerance === 'aggressive' ? 'lifecycle_20s' : 'lifecycle_40s';
  } else {
    portfolioType = 'lifecycle_50s';
  }
  
  const baseModel = portfolioModels[portfolioType];
  let allocation = { ...baseModel.allocation };
  
  // Adjust based on goals
  if (profile.goals.includes('house') && profile.timeHorizon === 'short') {
    allocation.stocks = Math.max(20, allocation.stocks - 20);
    allocation.bonds = Math.min(70, allocation.bonds + 20);
  }
  
  // Generate ETF recommendations
  const etfs = [];
  
  // Stocks allocation
  if (allocation.stocks >= 70) {
    etfs.push({
      ...coreETFs.stocks.world,
      category: 'stocks',
      allocation: Math.round(allocation.stocks * 0.7),
      reason: 'Z√°klad portfolia - ≈°irok√° glob√°ln√≠ diverzifikace'
    });
    etfs.push({
      ...coreETFs.stocks.sp500,
      category: 'stocks',
      allocation: Math.round(allocation.stocks * 0.3),
      reason: 'Americk√Ω trh - historicky nejlep≈°√≠ v√Ωkonnost'
    });
  } else {
    etfs.push({
      ...coreETFs.stocks.world,
      category: 'stocks',
      allocation: allocation.stocks,
      reason: 'Glob√°ln√≠ akciov√° expozice s ni≈æ≈°√≠m rizikem'
    });
  }
  
  // Bonds
  if (allocation.bonds > 0) {
    etfs.push({
      ...coreETFs.bonds.government,
      category: 'bonds',
      allocation: allocation.bonds,
      reason: profile.age > 45 ? 'Stabiln√≠ vl√°dn√≠ dluhopisy pro ochranu kapit√°lu' : 'Diverzifikace portfolia'
    });
  }
  
  // Commodities
  if (allocation.commodities > 0) {
    etfs.push({
      ...coreETFs.commodities.gold,
      category: 'commodities',
      allocation: allocation.commodities,
      reason: 'Ochrana proti inflaci a kriz√≠m'
    });
  }
  
  // REITs
  if (allocation.reits > 0) {
    etfs.push({
      ...coreETFs.reits.global,
      category: 'reits',
      allocation: allocation.reits,
      reason: 'Nemovitostn√≠ diverzifikace s pravideln√Ωm p≈ô√≠jmem'
    });
  }
  
  return {
    name: baseModel.name,
    allocation,
    etfs,
    expectedReturn: baseModel.expectedReturn,
    riskLevel: baseModel.riskLevel
  };
}

// Test cases
const testProfiles = [
  {
    name: "üéì Mlad√Ω absolvent (25 let)",
    profile: {
      age: 25,
      riskTolerance: 'aggressive',
      timeHorizon: 'long',
      monthlyAmount: 5000,
      goals: ['retirement', 'general_wealth']
    }
  },
  {
    name: "üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Rodina s dƒõtmi (40 let)",
    profile: {
      age: 40,
      riskTolerance: 'moderate',
      timeHorizon: 'medium',
      monthlyAmount: 15000,
      goals: ['education', 'retirement']
    }
  },
  {
    name: "üè† Spo≈ôen√≠ na bydlen√≠ (30 let)",
    profile: {
      age: 30,
      riskTolerance: 'moderate',
      timeHorizon: 'short',
      monthlyAmount: 10000,
      goals: ['house']
    }
  },
  {
    name: "üë¥ P≈ôed d≈Øchodem (55 let)",
    profile: {
      age: 55,
      riskTolerance: 'conservative',
      timeHorizon: 'short',
      monthlyAmount: 25000,
      goals: ['retirement']
    }
  }
];

console.log('üìä PORTFOLIO RECOMMENDATION EXAMPLES\n');
console.log('=' + '='.repeat(80) + '=\n');

testProfiles.forEach((testCase, index) => {
  console.log(`${testCase.name}`);
  console.log('‚îÄ'.repeat(50));
  
  const profile = testCase.profile;
  console.log(`üë§ Profil: ${profile.age} let, ${profile.riskTolerance}, ${profile.timeHorizon}-term`);
  console.log(`üí∞ Mƒõs√≠ƒçn√≠ investice: ${profile.monthlyAmount.toLocaleString()} Kƒç`);
  console.log(`üéØ C√≠le: ${profile.goals.join(', ')}`);
  
  const portfolio = generatePortfolio(profile);
  
  console.log(`\nüìà DOPORUƒåEN√â PORTFOLIO: ${portfolio.name}`);
  console.log(`üíé Oƒçek√°van√Ω v√Ωnos: ${portfolio.expectedReturn}`);
  console.log(`‚ö†Ô∏è  √örove≈à rizika: ${portfolio.riskLevel}/10`);
  
  console.log(`\nüéÇ ASSET ALLOCATION:`);
  console.log(`   üìà Akcie: ${portfolio.allocation.stocks}%`);
  console.log(`   üèõÔ∏è  Dluhopisy: ${portfolio.allocation.bonds}%`);
  console.log(`   ü•á Komodity: ${portfolio.allocation.commodities}%`);
  console.log(`   üè† REITs: ${portfolio.allocation.reits}%`);
  
  console.log(`\nüíº KONKR√âTN√ç ETF DOPORUƒåEN√ç:`);
  
  portfolio.etfs.forEach((etf, i) => {
    const categoryEmoji = {
      stocks: 'üìà',
      bonds: 'üèõÔ∏è',
      commodities: 'ü•á', 
      reits: 'üè†'
    }[etf.category];
    
    console.log(`\n   ${i + 1}. ${categoryEmoji} ${etf.name}`);
    console.log(`      üîó ISIN: ${etf.isin} (proklik ‚Üí /etf/${etf.isin})`);
    console.log(`      üìä Alokace: ${etf.allocation}% z portfolia`);
    console.log(`      üí∞ TER: ${etf.ter}% roƒçnƒõ`);
    console.log(`      üí° D≈Øvod: ${etf.reason}`);
  });
  
  console.log(`\nüí° INVESTIƒåN√ç STRATEGIE:`);
  if (portfolio.riskLevel >= 7) {
    console.log(`   üöÄ Agresivn√≠ r≈Østov√° strategie`);
    console.log(`   ‚Ä¢ Vysok√© akciov√© zastoupen√≠ pro maxim√°ln√≠ dlouhodob√Ω r≈Øst`);
    console.log(`   ‚Ä¢ Tolerujte kr√°tkodob√© v√Ωkyvy (-20 a≈æ -30% v kriz√≠ch)`);
    console.log(`   ‚Ä¢ Rebalancing jednou roƒçnƒõ`);
  } else if (portfolio.riskLevel >= 5) {
    console.log(`   ‚öñÔ∏è  Vyv√°≈æen√° investiƒçn√≠ strategie`);
    console.log(`   ‚Ä¢ Optim√°ln√≠ pomƒõr r≈Østu a stability`);
    console.log(`   ‚Ä¢ St≈ôedn√≠ volatilita (-10 a≈æ -20% v kriz√≠ch)`);
    console.log(`   ‚Ä¢ Rebalancing dvakr√°t roƒçnƒõ`);
  } else {
    console.log(`   üõ°Ô∏è  Konzervativn√≠ strategie`);
    console.log(`   ‚Ä¢ Ochrana kapit√°lu s m√≠rn√Ωm r≈Østem`);
    console.log(`   ‚Ä¢ N√≠zk√° volatilita (-5 a≈æ -15% v kriz√≠ch)`);
    console.log(`   ‚Ä¢ Rebalancing ƒçtvrtletnƒõ`);
  }
  
  console.log(`\nüéØ PRAKTICK√â KROKY:`);
  if (profile.monthlyAmount <= 5000) {
    console.log(`   1. Zaƒçnƒõte s DEGIRO (nƒõkter√© ETF zdarma)`);
    console.log(`   2. Nastavte automatick√© investice ${profile.monthlyAmount} Kƒç/mƒõs√≠c`);
  } else if (profile.monthlyAmount <= 15000) {
    console.log(`   1. Doporuƒçujeme XTB (0% poplatky do 100k EUR)`);
    console.log(`   2. Investujte ${profile.monthlyAmount} Kƒç mƒõs√≠ƒçnƒõ (DCA strategie)`);
  } else {
    console.log(`   1. Zva≈æte Interactive Brokers (nej≈°ir≈°√≠ v√Ωbƒõr)`);
    console.log(`   2. Velk√° mƒõs√≠ƒçn√≠ ƒç√°stka ${profile.monthlyAmount} Kƒç umo≈æ≈àuje i men≈°√≠ ETF`);
  }
  
  console.log(`   3. Dr≈æte se pl√°nu minim√°lnƒõ 5 let`);
  console.log(`   4. Rebalancujte p≈ôi odchylce >5% od target alokace`);
  console.log(`   5. Neprod√°vejte v panick√© n√°ladƒõ`);
  
  if (index < testProfiles.length - 1) {
    console.log(`\n${'‚ïê'.repeat(82)}\n`);
  }
});

console.log(`\n\nüéØ SHRNUT√ç LOGIKY:`);
console.log(`‚úÖ Mlad√≠ = v√≠ce akci√≠ (80-90%)`);
console.log(`‚úÖ Star≈°√≠ = v√≠ce dluhopis≈Ø (40-60%)`);  
console.log(`‚úÖ Agresivn√≠ = +10% akci√≠`);
console.log(`‚úÖ Konzervativn√≠ = +15% dluhopis≈Ø`);
console.log(`‚úÖ Koupƒõ domu = +20% dluhopis≈Ø (stabilita)`);
console.log(`‚úÖ Ka≈æd√© ETF m√° konkr√©tn√≠ d≈Øvod za≈ôazen√≠`);
console.log(`‚úÖ V≈°echny ISIN jsou proklikateln√© na detail`);

console.log(`\nüöÄ Tento portfolio-based p≈ô√≠stup je:`);
console.log(`‚Ä¢ Vƒõdecky podlo≈æen√Ω (Modern Portfolio Theory)`);
console.log(`‚Ä¢ User-friendly (srozumiteln√© %)`);
console.log(`‚Ä¢ Praktick√Ω (konkr√©tn√≠ ETF + kroky)`);
console.log(`‚Ä¢ Personalizovan√Ω (vƒõk + c√≠le + riziko)`);